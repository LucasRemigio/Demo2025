/* eslint-disable @typescript-eslint/naming-convention */
import {
    BaseRatingDTO,
    Client,
    RatingDiscount,
    RatingType,
} from 'app/modules/configurations/clients/clients.types';
import { EmailAttachment } from 'app/modules/filtering/filtering.types';
import {
    DestinationDetails,
    OrderRatingItem,
} from '../../confirm-order-address/confirm-order-address.types';
import {
    OrderProductItem,
    OrderTotalItem,
    ProductCatalogDto,
    ProductUnit,
} from '../../email-product-table/products.types';

export interface FilteredEmailDTOResponse {
    filteredEmail: FilteredEmail;
    emailAttachments: EmailAttachment[];
    order: OrderDTO;
    result: string;
    result_code: number;
}

export interface Order {
    id: number;
    token: string;
    email_token: string;
    is_delivery: boolean;
    postal_code: string;
    address: string;
    status_id: number;
    is_draft: boolean;
}

export interface OrderItem {
    id: number; // to be generated by the database
    email_token: string; // how will we handle this?
    token: string; // to be generated by the backend
    is_delivery: boolean;
    postal_code: string;
    address: string;
    city: string;
    is_draft: boolean;
    client_code: string | null;
    transport_id: number | null;
    maps_address: string | null;
    distance: number | null;
    travel_time: number | null;
    observations: string;
    contact: string;
    is_adjudicated: boolean;
    locality: string;
    district: string;
}

export interface OrderDTO {
    id: number;
    token: string;
    email_token: string;
    is_delivery: boolean;
    postal_code: string;
    municipality_cc: string;
    district_dd: string;
    address: string;
    city: string;
    is_draft: boolean;
    cancel_reason: null;
    canceled_by: string;
    canceled_at: string;
    confirmed_by: string;
    confirmed_at: string;
    products: OrderProductsDTO[];
    client?: Client;
    client_nif: number | null;
    filtered_email: null;
    transport?: TransportItem | null;
    ratings: OrderRatingDTO[];
    rating_change_requests: OrderRatingChangeRequestDto[];
    maps_address: string | null;
    distance: number | null;
    travel_time: number | null;
    observations: string;
    contact: string;
    order_total: OrderTotalItem;
    is_adjudicated: boolean;
    status: Status;
    resolved_by: string;
    resolved_at: Date;
}

export interface OrderRatingChangeRequestDto {
    id: number;
    order_token: string;
    rating_type: RatingType;
    new_rating_discount: RatingDiscount;
    status: string;
    requested_at: string;
    requested_by: string;
    verified_at: null;
    verified_by: string;
}

export interface OrderRatingDTO extends BaseRatingDTO {
    order_token: string;
}

export interface ProposeNewRating {
    rating_type_id: number;
    new_rating: string;
}

export interface ReplyProposedRatings {
    rating_type_id: number;
    is_accepted: boolean;
}

export interface ClientProductsUpdate {
    client: Client;
    nif: number;
    products: OrderProductItem[];
    address_details: AddressFillingDetails | null;
    destination_details: DestinationDetails | null;
    logistic_rating: OrderRatingItem | null;
}

export interface AddressFillingDetails {
    municipality_cc: string;
    district_dd: string;
    cp4: string;
    cp3: string;
    postal_code: PostalCode;
    transport_id: number;
    city: string;
    address: string;
}

interface PostalCode {
    id: number;
    dd: string;
    cc: string;
    llll: string;
    localidade: string;
    art_cod: string;
    art_tipo: string;
    pri_prep: string;
    art_titulo: string;
    seg_prep: string;
    art_desig: string;
    art_local: string;
    troco: string;
    porta: string;
    cliente: string;
    cp4: string;
    cp3: string;
    cpalf: string;
}

export interface TransportItem {
    id: number;
    name: string;
    slug: string;
    description: string;
}

export interface OrderProductsDTO {
    id: number;
    order_token: string;
    product_catalog: ProductCatalogDto;
    product_unit: ProductUnit;
    quantity: number;
    calculated_price: number | null;
    price_discount: number | null;
    confidence?: number;
    is_instant_match?: boolean;
    is_manual_insert?: boolean;
    price_locked_at: Date | null;
    is_price_locked: boolean;
}

export interface OrderProduct {
    id: number;
    order_token: string;
    product_catalog_id: number;
    product_unit_id: number;
    quantity: number;
    calculated_price?: number;
    confidence: number;
    is_instant_match: boolean;
    is_manual_insert: boolean;
}

export interface ProductCatalogDTO {
    id: number;
    product_code: string;
    description: string;
    type: Type;
    shape: Type;
    material: Type;
    finishing: Type;
    surface: Type;
    length: number;
    width: number;
    height: number;
    unit: string;
    stock_current: number;
    currency: string;
    price_pvp: number;
    price_avg: number;
    price_last: number;
    date_last_entry: string;
    date_last_exit: string;
    family: Family;
    price_ref_market: number;
    nominal_dimension?: string;
    pricing_strategy: PricingStrategy;
}

export interface PricingStrategy {
    id: number;
    name: string;
    slug: string;
}

interface Productcatalog {
    id: number;
    product_code: string;
    description: string;
    description_full: string;
    type: Type;
    shape: Type;
    material: Type;
    finishing: Type;
    surface: Type;
    length: number;
    width: number;
    height: number;
    thickness: number;
    diameter: number;
    unit: string;
    stock_current: number;
    currency: string;
    price_pvp: number;
    price_avg: number;
    price_last: number;
    date_last_entry: string;
    date_last_exit: string;
    family: Family;
    price_ref_market: number;
    nominal_dimension: null;
    pricing_strategy: null;
}

interface Family {
    id: string;
    name: string;
}

interface Type {
    id: number;
    name: string;
}

interface Family {
    id: string;
    name: string;
}

interface Type {
    id: number;
    name: string;
}

interface Status {
    id: number;
    description: string;
}

export interface FilteredEmail {
    email: Email;
    category: string;
    status: string;
    date: string;
    token: string;
    confidence: string;
    validated: string;
    reply_count: number;
    unread_replies_count: number;
    replied_by: null;
    replied_at: string;
    resolved_by: string;
    resolved_at: string;
    forwarded_by: null;
    forwarded_at: string;
}

export interface ProductDTO {
    id: number;
    email_token: string;
    name: string;
    size: string;
    quantity: number;
    quantity_unit: string;
    confidence: number;
    product_catalog?: ProductCatalogDTO;
    match_confidence?: number;
    calculated_price?: number;
}

export interface Email {
    id: string;
    from: string;
    to: string;
    cc: string;
    bcc: string;
    subject: string;
    body: string;
    date: string;
}

export enum ResolvedStatus {
    RESOLVED = 'RESOLVED',
    RESOLVEDPREV = 'RESOLVEDPREV',
    UNRESOLVED = 'UNRESOLVED',
}

export interface EmailPopupState {
    emailContent: Email | null;
    attachments: EmailAttachment[];
}

export interface ChangeClientData {
    client: Client;
    orderToken?: string | null;
    orderNif: number | null;
}
